[{"C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\index.js":"1","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\App.js":"2","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\pages\\SavedBooks.js":"3","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\components\\Navbar.js":"4","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\pages\\SearchBooks.js":"5","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\components\\LoginForm.js":"6","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\components\\SignupForm.js":"7","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\utils\\mutations.js":"8","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\utils\\localStorage.js":"9","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\utils\\auth.js":"10","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\utils\\API.js":"11","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\utils\\queries.js":"12"},{"size":266,"mtime":1667351650255,"results":"13","hashOfConfig":"14"},{"size":1245,"mtime":1671413615415,"results":"15","hashOfConfig":"14"},{"size":3542,"mtime":1671413092521,"results":"16","hashOfConfig":"14"},{"size":2524,"mtime":1667351650246,"results":"17","hashOfConfig":"14"},{"size":5100,"mtime":1671414770167,"results":"18","hashOfConfig":"14"},{"size":2911,"mtime":1671411711841,"results":"19","hashOfConfig":"14"},{"size":3533,"mtime":1671411288394,"results":"20","hashOfConfig":"14"},{"size":1044,"mtime":1671412468822,"results":"21","hashOfConfig":"14"},{"size":793,"mtime":1667351650268,"results":"22","hashOfConfig":"14"},{"size":1234,"mtime":1667351650266,"results":"23","hashOfConfig":"14"},{"size":1533,"mtime":1671413201230,"results":"24","hashOfConfig":"14"},{"size":275,"mtime":1671410639759,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1gac33f",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\index.js",[],["54","55"],"C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\App.js",[],"C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\pages\\SavedBooks.js",["56","57","58","59","60","61"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\n\nimport { getMe, deleteBook } from \"../utils/API\";\nimport Auth from \"../utils/auth\";\nimport { removeBookId } from \"../utils/localStorage\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { DELETE_BOOK } from \"../utils/mutations\";\nimport { QUERY_ME } from \"../utils/queries\";\n\nconst SavedBooks = () => {\n  // const [userData, setUserData] = useState({});\n\n  const [deleteBook, { error }] = useMutation(DELETE_BOOK);\n  const { loading, data } = useQuery(QUERY_ME);\n  const userData = data?.user;\n\n  // use this to determine if `useEffect()` hook needs to run again\n  // const userDataLength = Object.keys(userData).length;\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error(\"something went wrong!\");\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await deleteBook({ variables: { id: bookId } });\n\n      // if (!response.ok) {\n      //   throw new Error(\"something went wrong!\");\n      // }\n\n      // const updatedUser = await response.json();\n      // setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\n              }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\components\\Navbar.js",[],"C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\pages\\SearchBooks.js",["62"],"C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\components\\LoginForm.js",["63"],"// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import { loginUser } from '../utils/API';\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({ variables: { ...userFormData } });\n\n      // if (!response.ok) {\n      //   throw new Error('something went wrong!');\n      // }\n\n      // const { token, user } = await response.json();\n      // console.log(user);\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\components\\SignupForm.js",["64"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\n// import { createUser } from '../utils/API';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [createUser, { error}] = useMutation(CREATE_USER)\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      // const response = await createUser(userFormData);\n      const { data } = await createUser({variables: {...userFormData}})\n\n      // if (!response.ok) {\n      //   throw new Error('something went wrong!');\n      // }\n\n      // const { token, user } = await response.json();\n      // console.log(user);\n      Auth.login(data.createUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\utils\\mutations.js",[],"C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\utils\\localStorage.js",[],"C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\utils\\auth.js",[],"C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\utils\\API.js",[],"C:\\Afshin\\UBC\\Source\\HW\\Book-Search-Engine-GraphQL-API\\client\\src\\utils\\queries.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"74","line":10,"column":10,"nodeType":"71","messageId":"72","endLine":10,"endColumn":15},{"ruleId":"69","severity":1,"message":"75","line":10,"column":17,"nodeType":"71","messageId":"72","endLine":10,"endColumn":27},{"ruleId":"69","severity":1,"message":"76","line":21,"column":24,"nodeType":"71","messageId":"72","endLine":21,"endColumn":29},{"ruleId":"69","severity":1,"message":"77","line":62,"column":15,"nodeType":"71","messageId":"72","endLine":62,"endColumn":19},{"ruleId":"69","severity":1,"message":"76","line":25,"column":22,"nodeType":"71","messageId":"72","endLine":25,"endColumn":27},{"ruleId":"69","severity":1,"message":"76","line":16,"column":19,"nodeType":"71","messageId":"72","endLine":16,"endColumn":24},{"ruleId":"69","severity":1,"message":"76","line":18,"column":24,"nodeType":"71","messageId":"72","endLine":18,"endColumn":29},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'getMe' is defined but never used.","'deleteBook' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]